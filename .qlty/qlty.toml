# This file was automatically generated by `qlty init`.
# You can modify it to suit your needs.
# We recommend you to commit this file to your repository.
#
# This configuration is used by both Qlty CLI and Qlty Cloud.
#
#     Qlty CLI -- Code quality toolkit for developers
#     Qlty Cloud -- Fully automated Code Health Platform
#
# Try Qlty Cloud: https://qlty.sh
#
# For a guide to configuration, visit https://qlty.sh/d/config
# Or for a full reference, visit https://qlty.sh/d/qlty-toml
config_version = "0"

exclude_patterns = [
  "*_min.*",
  "*-min.*",
  "*.min.*",
  "**/.yarn/**",
  "**/*.d.ts",
  "**/assets/**",
  "**/bower_components/**",
  "**/build/**",
  "**/cache/**",
  "**/config/**",
  "**/db/**",
  "**/deps/**",
  "**/dist/**",
  "**/extern/**",
  "**/external/**",
  "**/generated/**",
  "**/Godeps/**",
  "**/gradlew/**",
  "**/mvnw/**",
  "**/node_modules/**",
  "**/protos/**",
  "**/seed/**",
  "**/target/**",
  "**/templates/**",
  "**/testdata/**",
  "**/vendor/**",
  "**/mock_*",
  "**/*_test.go",
]

test_patterns = [
  "**/test/**",
  "**/spec/**",
  "**/*.test.*",
  "**/*.spec.*",
  "**/*_test.*",
  "**/*_spec.*",
  "**/test_*.*",
  "**/spec_*.*",
]

[smells]
mode = "comment"

[smells.boolean_logic]
threshold = 10
enabled = true

[smells.file_complexity]
threshold = 85  # Increased from 66 to match your codeclimate complex-logic: 10 scaled appropriately
enabled = true

[smells.return_statements]
threshold = 25  # Significantly increased from 8 to match your codeclimate threshold
enabled = true

[smells.nested_control_flow]
threshold = 4
enabled = true

[smells.function_parameters]
threshold = 6
enabled = true

[smells.function_complexity]
threshold = 13
enabled = true

# CRITICAL: Completely disable duplication detection like in Code Climate
[smells.duplication]
enabled = false

[[source]]
name = "default"
default = true

# CRITICAL TRIAGE RULES: These will suppress the specific issues shown in your screenshot

# Completely ignore similar-code issues (22 occurrences in your screenshot)
[[triage]]
match.rules = ["qlty:similar-code"]
match.file_patterns = ["**/*.go"]
set.ignored = true

# Completely ignore identical-code issues (4 occurrences in your screenshot)
[[triage]]
match.rules = ["qlty:identical-code"]
match.file_patterns = ["**/*.go"]
set.ignored = true

# Set function-parameters issues to low priority instead of medium (10 occurrences)
[[triage]]
match.rules = ["qlty:function-parameters"]
match.file_patterns = ["**/*.go"]
set.level = "low"
set.mode = "monitor"

# Set return-statements issues to low priority (6 occurrences)
[[triage]]
match.rules = ["qlty:return-statements"]
match.file_patterns = ["**/*.go"]
set.level = "low"
set.mode = "monitor"

# Set file-complexity issues to low priority (1 occurrence)
[[triage]]
match.rules = ["qlty:file-complexity"]
match.file_patterns = ["**/*.go"]
set.level = "low"
set.mode = "monitor"

# Set nested-control-flow issues to low priority (1 occurrence)
[[triage]]
match.rules = ["qlty:nested-control-flow"]
match.file_patterns = ["**/*.go"]
set.level = "low"
set.mode = "monitor"

# Additional safeguard: Set all medium-level structure issues to monitor mode
[[triage]]
match.plugins = ["qlty"]
match.levels = ["medium"]
match.file_patterns = ["**/*.go"]
set.mode = "monitor"

# Set all duplication category issues to be ignored
[[triage]]
match.plugins = ["qlty"]
match.category = ["duplication"]
set.ignored = true