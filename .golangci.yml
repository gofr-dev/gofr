linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  gci:
    sections:
      - prefix(gofr.dev)
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 10
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  gomnd:
    checks:
      - argument
      - case
      - condition
      - return
  govet:
    enable:
      - shadow
    settings:
      printf:
        funcs:
          - (gofr.dev/pkg/gofr/Logger).Logf
          - (gofr.dev/pkg/gofr/Logger).Errorf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: true # require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - exportloopref
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goerr113
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nestif
    - noctx
    - nolintlint
    - prealloc
    - revive
    - rowserrcheck
    - staticcheck
    - stylecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - wsl

  # don't enable:
  # - godox  # Disabling because we need TODO lines at this stage of project.
  # - testpackage # We also need to do unit test for unexported functions. And adding _internal in all files is cumbersome.


service:
  golangci-lint-version: 1.57.x

issues:
  # exclude-use-default: false
  # exclude-use-default: false # By default, golangci-lint does not enforce comments on exported types. We want it.
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - dupl
        - goconst